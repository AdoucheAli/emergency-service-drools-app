/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * CurrentEmergenciesPanel.java
 *
 * Created on Nov 24, 2010, 6:23:51 PM
 */

package com.wordpress.salaboy.ui;

import java.util.ArrayList;
import java.util.List;

/**
 *
 * @author esteban
 */
public class CurrentEmergenciesPanel extends javax.swing.JPanel {

    private UserUI parent;
    private List<EmergencyFrame> emergencyFrames = new ArrayList<EmergencyFrame>();
    
    public CurrentEmergenciesPanel(UserUI parent) {
        this.parent = parent;
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setName("Current Emergencies"); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables

    public void addNewEmergency(long ambulanceId){
        EmergencyFrame emergencyFrame = new EmergencyFrame(parent, ambulanceId);
        this.emergencyFrames.add(emergencyFrame);
        this.add(emergencyFrame);
        this.validate();
    }

    void heartBeatReceived(double value) {
        //notify all frames. FIXME: only one should be notified
        for (EmergencyFrame emergencyFrame : emergencyFrames) {
            emergencyFrame.heartBeatReceived(value);
        }
    }

    void emergencyReached(Block emergency) {
        //notify all frames. FIXME: only one should be notified
        for (EmergencyFrame emergencyFrame : emergencyFrames) {
            emergencyFrame.emergencyReached(emergency);
        }
    }

    void hospitalSelected(Long id) {
        //notify all frames. FIXME: only one should be notified
        for (EmergencyFrame emergencyFrame : emergencyFrames) {
            emergencyFrame.hospitalSelected(id);
        }
    }

    void positionReceived(Block corner) {
        //notify all frames. FIXME: only one should be notified
        for (EmergencyFrame emergencyFrame : emergencyFrames) {
            emergencyFrame.positionReceived(corner);
        }
    }
}
