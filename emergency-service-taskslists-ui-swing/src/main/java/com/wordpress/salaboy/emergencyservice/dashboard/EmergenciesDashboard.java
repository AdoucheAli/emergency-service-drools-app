/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * EmergenciesDashboard.java
 *
 * Created on Apr 29, 2011, 9:49:25 PM
 */
package com.wordpress.salaboy.emergencyservice.dashboard;

import com.wordpress.salaboy.model.Emergency;
import com.wordpress.salaboy.model.serviceclient.DistributedPeristenceServerService;
import java.util.ArrayList;
import java.util.Collection;
import java.util.Iterator;
import java.util.List;

/**
 *
 * @author salaboy
 */
public class EmergenciesDashboard extends javax.swing.JFrame {

    /** Creates new form EmergenciesDashboard */
    public EmergenciesDashboard() {
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        System.out.println(">>>>  Opening the DASHBOARD");
        DistributedPeristenceServerService.getInstance();
        emergenciesjTable = new javax.swing.JTable();
        refreshjButton = new javax.swing.JButton();
        liveReportjButton = new javax.swing.JButton();

        setPreferredSize(new java.awt.Dimension(400, 300));

        Collection<Emergency> emergencies = (Collection<Emergency>) DistributedPeristenceServerService.getInstance().getAllEmergencies();
        System.out.println(">>>>  Emergencies Count in the DASHBOARD:"+emergencies.size());
        Object[][] emergenciesArray = new Object[emergencies.size()][4];
        Iterator<Emergency> it = emergencies.iterator();
        int i = 0;
        while(it.hasNext()){
            Emergency emergency = it.next();
            emergenciesArray[i][0] = emergency.getId();
            emergenciesArray[i][1] = emergency.getCall().getId();
            emergenciesArray[i][2] = emergency.getType().toString();
            emergenciesArray[i][3] = emergency.getNroOfPeople();
            i++;
        }
        emergenciesjTable.setModel(new javax.swing.table.DefaultTableModel(
            emergenciesArray,
            new String [] {
                "Emergency ID", "Call ID", "Emergency Type", "People involved"
            }
        ));
        jScrollPane1.setViewportView(emergenciesjTable);

        refreshjButton.setText("Refresh");
        refreshjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshjButtonActionPerformed(evt);
            }
        });

        liveReportjButton.setText("Open Selected Emergency Live Report");
        liveReportjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                liveReportjButtonActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jScrollPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 370, Short.MAX_VALUE)
                    .add(layout.createSequentialGroup()
                        .add(refreshjButton)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                        .add(liveReportjButton)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(jScrollPane1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 375, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(refreshjButton)
                    .add(liveReportjButton))
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void liveReportjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_liveReportjButtonActionPerformed
        // TODO add your handling code here:
        int[] selected = emergenciesjTable.getSelectedRows();
            
           List<Long> selectedEmergencies = new ArrayList<Long>(selected.length);
           
            for(int i = 0; i < selected.length; i++){
                selectedEmergencies.add((Long)emergenciesjTable.getModel().getValueAt(i, 0));
            }
            
            openLiveReportPanel(selectedEmergencies);
    }//GEN-LAST:event_liveReportjButtonActionPerformed

    private void refreshjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshjButtonActionPerformed
        // TODO add your handling code here:
        Collection<Emergency> emergencies = (Collection<Emergency>) DistributedPeristenceServerService.getInstance().getAllEmergencies();
        Object[][] emergenciesArray = new Object[emergencies.size()][4];
        Iterator<Emergency> it = emergencies.iterator();
        int i = 0;
        while(it.hasNext()){
            Emergency emergency = it.next();
            emergenciesArray[i][0] = emergency.getId();
            emergenciesArray[i][1] = emergency.getCall().getId();
            emergenciesArray[i][2] = emergency.getType().toString();
            emergenciesArray[i][3] = emergency.getNroOfPeople();
            i++;
        }
        emergenciesjTable.setModel(new javax.swing.table.DefaultTableModel(
                emergenciesArray,
                new String[]{
                    "Emergency ID", "Call ID", "Emergency Type", "People involved"
                }));

    }//GEN-LAST:event_refreshjButtonActionPerformed

   
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable emergenciesjTable;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton liveReportjButton;
    private javax.swing.JButton refreshjButton;
    // End of variables declaration//GEN-END:variables

    private void openLiveReportPanel(final List<Long> selectedEmergencies) {
        //
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new LiveEmergencyReport(selectedEmergencies.get(0)).setVisible(true);
                
            }
         });
    }
}
