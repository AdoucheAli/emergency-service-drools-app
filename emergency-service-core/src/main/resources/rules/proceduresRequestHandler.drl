package procedureRequestsHandler;


import java.util.Map;
import java.util.HashMap;
import com.wordpress.salaboy.model.*;
import com.wordpress.salaboy.model.Emergency.EmergencyType;
import com.wordpress.salaboy.model.serviceclient.*;
import com.wordpress.salaboy.model.serviceclient.PersistenceServiceProvider.*;
import com.wordpress.salaboy.context.tracking.*;
import org.drools.runtime.process.ProcessInstance;


declare ProcedureRequest
    @role(event)
end


rule "Start Default Heart Attack Procedure if not emergency was found"
    when
        $procedureRequest: ProcedureRequest() from entry-point "procedure request"
    then
        ProcessInstance pi = kcontext.getKnowledgeRuntime().startProcess($procedureRequest.getProcedure(), $procedureRequest.getParameters());
        insert(pi);     
end



// THE FOLLOWING RULES ARE NOT WORKING NOW!!!

/*rule "Procedure Request Primary Handler - Insert Emergency"
    salience 20
    when
        $procedureRequest: ProcedureRequest( $emergencyId: parameters['emergency.id'] != null ) from entry-point "procedure request"

    then
        //This can be set up as a global.. but beware of the remoting stuff in grid
        Map<String, Object> params = new HashMap<String, Object>();
        params.put("ContextTrackingImplementation", ContextTrackingProvider.ContextTrackingServiceType.IN_MEMORY);
        PersistenceServiceConfiguration conf = new PersistenceServiceConfiguration(params);
        PersistenceService persistenceService = PersistenceServiceProvider.getPersistenceService(PersistenceServiceProvider.PersistenceServiceType.DISTRIBUTED_MAP, conf);
        System.out.println("Inserting Emergency ->"+persistenceService.loadEmergency((Long)$emergencyId));
        insert(persistenceService.loadEmergency((Long)$emergencyId));
       
end

rule "Procedure Request Primary Handler - Insert Patient"
    salience 10
    when
        Emergency(nroOfPeople == 1)
        $procedureRequest: ProcedureRequest( $patientId: parameters['patient.id'] != null ) from entry-point "procedure request"
    then
        //This can be set up as a global.. but beware of the remoting stuff in grid
        Map<String, Object> params = new HashMap<String, Object>();
        params.put("ContextTrackingImplementation", ContextTrackingProvider.ContextTrackingServiceType.IN_MEMORY);
        PersistenceServiceConfiguration conf = new PersistenceServiceConfiguration(params);
        PersistenceService persistenceService = PersistenceServiceProvider.getPersistenceService(PersistenceServiceProvider.PersistenceServiceType.DISTRIBUTED_MAP, conf);
        System.out.println("Inserting Patient ->"+persistenceService.loadPatient((Long)$patientId));
        insert(persistenceService.loadPatient((Long)$patientId));
end

rule "Start Default Heart Attack Procedure"
    when
        $procedureRequest: ProcedureRequest() from entry-point "procedure request"
        Emergency(type == EmergencyType.HEART_ATTACK)
        Patient(age > 20 && < 60)
        
    then
       ProcessInstance pi = kcontext.getKnowledgeRuntime().startProcess($procedureRequest.getProcedure(), $procedureRequest.getParameters());
       insert(pi);
        
end*/


